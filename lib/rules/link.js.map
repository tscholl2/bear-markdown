{"version":3,"file":"link.js","sourceRoot":"","sources":["../../src/rules/link.ts"],"names":[],"mappings":";;AAEA,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,GAAG;IACD,uCAAuC;IACvC,iBAAiB;IACjB,qCAAqC;IACrC,iBAAiB,CACpB,CAAC;AAEF,kBAAqB;IACnB,KAAK,EAAE,UAAC,CAAC,EAAE,EAAU;YAAR,kBAAM;QAAO,OAAA,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAA5B,CAA4B;IACtD,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,CAAC;QACjC,GAAG,EAAE,MAAM;QACX,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE;QAC3B,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;KACxE,CAAC,EAJgC,CAIhC;CACH,CAAC","sourcesContent":["import { Rule } from \"../parser\";\n\nconst re = new RegExp(\n  \"^\" +\n    // look for stuff inside brackets [...]\n    \"\\\\[([^\\\\]]+)\\\\]\" +\n    // look for stuff inside parens (...)\n    \"\\\\(([^\\\\)]+)\\\\)\",\n);\n\nexport default <Rule>{\n  match: (s, { inline }) => (inline ? re.exec(s) : null),\n  parse: (capture, parse, state) => ({\n    tag: \"link\",\n    props: { href: capture[2] },\n    children: parse(capture[1], Object.assign({}, state, { inline: true })),\n  }),\n};\n"]}