{"version":3,"file":"image.js","sourceRoot":"","sources":["../../src/rules/image.ts"],"names":[],"mappings":";;AAEA,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,MAAM;IACJ,uCAAuC;IACvC,kBAAkB;IAClB,qCAAqC;IACrC,KAAK;IACL,eAAe;IACf,aAAa;IACb,6BAA6B;IAC7B,oBAAoB;IACpB,aAAa;IACb,KAAK,CACR,CAAC;AAEF,kBAAqB;IACnB,KAAK,EAAE,UAAC,CAAC,EAAE,EAAU;YAAR,kBAAM;QAAO,OAAA,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAAjC,CAAiC;IAC3D,KAAK,EAAE,UAAA,OAAO,IAAI,OAAA,CAAC;QACjB,GAAG,EAAE,OAAO;QACZ,KAAK,EAAE;YACL,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;YAC9B,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;YAC9B,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;SACjC;KACF,CAAC,EAPgB,CAOhB;CACH,CAAC","sourcesContent":["import { Rule } from \"../parser\";\n\nconst re = new RegExp(\n  \"^\\\\!\" +\n    // look for stuff inside brackets [...]\n    \"\\\\[([^\\\\]]+)?\\\\]\" +\n    // look for stuff inside parens (...)\n    \"\\\\(\" +\n    // look for url\n    '([^\\\\)\"]+)?' +\n    // look for an optional title\n    '\\\\s*(?:\"([^\"]+)\")?' +\n    // end parens\n    \"\\\\)\",\n);\n\nexport default <Rule>{\n  match: (s, { inline }) => (inline ? re.exec(s) : undefined),\n  parse: capture => ({\n    tag: \"image\",\n    props: {\n      alt: (capture[1] || \"\").trim(),\n      src: (capture[2] || \"\").trim(),\n      title: (capture[3] || \"\").trim(), // TODO remove if absent\n    },\n  }),\n};\n"]}