{"version":3,"file":"text.js","sourceRoot":"","sources":["../../src/rules/text.ts"],"names":[],"mappings":";;AAEA,kBAAqB;IACnB,KAAK,EAAE,UAAC,CAAC,EAAE,EAAU;YAAR,kBAAM;QACjB,kDAAkD;QAClD,gDAAgD;QAChD,8DAA8D;QAC9D,0BAA0B;QAC1B,OAAA,MAAM,GAAG,8CAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;IAAtE,CAAsE;IACxE,KAAK,EAAE,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,CAAC,CAAC,EAAV,CAAU;CAC7B,CAAC","sourcesContent":["import { Rule } from \"../parser\";\n\nexport default <Rule>{\n  match: (s, { inline }) =>\n    // take at least one letter (that isn't a newline)\n    // and keep going until we get to something that\n    // might possibly match something else (image, emphasis, etc.)\n    // or the end of the match\n    inline ? /^[^\\n]+?(?=[^0-9A-Za-z\\s\\u00c0-\\uffff]|\\n|$)/.exec(s) : null,\n  parse: capture => capture[0],\n};\n"]}