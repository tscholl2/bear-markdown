{"version":3,"file":"emphasis.js","sourceRoot":"","sources":["../../src/rules/emphasis.ts"],"names":[],"mappings":";;AAEA,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,GAAG;IACD,uCAAuC;IACvC,wBAAwB;IACxB,0CAA0C;IAC1C,gBAAgB;IAChB,KAAK,CACR,CAAC;AAEF,kBAAqB;IACnB,KAAK,EAAE,EAAE;IACT,KAAK,EAAE,UAAC,CAAC,EAAE,EAAU;YAAR,kBAAM;QAAO,OAAA,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAA5B,CAA4B;IACtD,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,CAAC;QACjC,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;QACrB,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;KACnC,CAAC,EAJgC,CAIhC;CACH,CAAC","sourcesContent":["import { Rule } from \"../parser\";\n\nconst re = new RegExp(\n  \"^\" +\n    // delimters are __, **, ~~, _, *, or ~\n    \"(__|\\\\*\\\\*|~~|_|\\\\*|~)\" +\n    // match until the next matching delimiter\n    \"([^(?:\\\\1)]*)?\" +\n    \"\\\\1\",\n);\n\nexport default <Rule>{\n  order: 23,\n  match: (s, { inline }) => (inline ? re.exec(s) : null),\n  parse: (capture, parse, state) => ({\n    type: \"emphasis\",\n    delimiter: capture[1],\n    children: parse(capture[2], state),\n  }),\n};\n"]}