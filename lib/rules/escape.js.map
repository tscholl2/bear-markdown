{"version":3,"file":"escape.js","sourceRoot":"","sources":["../../src/rules/escape.ts"],"names":[],"mappings":";;AAEA,IAAM,EAAE,GAAG,IAAI,MAAM,CACnB,SAAS;IACT,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACH,IAAI,CACP,CAAC;AAEF,kBAAqB;IACnB,KAAK,EAAE,CAAC,CAAC;IACT,KAAK,EAAE,UAAC,CAAC,EAAE,EAAU;YAAR,kBAAM;QAAO,OAAA,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAA5B,CAA4B;IACtD,KAAK,EAAE,UAAA,OAAO,IAAI,OAAA,CAAC;QACjB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;KACpB,CAAC,EAHgB,CAGhB;CACH,CAAC","sourcesContent":["import { Rule } from \"../parser\";\n\nconst re = new RegExp(\n  \"^\\\\\\\\([\" +\n  \"\\\\\" + // \\   backslash\n  \"\\\\`\" + // `   backtick\n  \"\\\\*\" + // *   asterisk\n  \"\\\\_\" + // _   underscore\n  \"\\\\{\\\\}\" + // {}  curly braces\n  \"\\\\[\\\\]\" + // []  square brackets\n  \"\\\\(\\\\)\" + // ()  parentheses\n  \"\\\\#\" + // #   hash mark\n  \"\\\\+\" + // +   plus sign\n  \"\\\\-\" + // -   minus sign (hyphen)\n  \"\\\\.\" + // .   dot\n  \"\\\\!\" + // !   exclamation mark\n  \"\\\\<\" + // <   less-than    <-- added in Spec Markdown\n  \"\\\\>\" + // >   greater-than <-- added in Spec Markdown\n  \"\\\\|\" + // |   pipe         <-- added in Spec Markdown\n  \"\\\\$\" + // $   dollar sign  <-- added by me (b/c math)\n  \"\\\\~\" + // ~   tilde        <-- added by me (b/c ~ is used in emphasis)\n    \"])\",\n);\n\nexport default <Rule>{\n  order: -1,\n  match: (s, { inline }) => (inline ? re.exec(s) : null),\n  parse: capture => ({\n    type: \"text\",\n    content: capture[1],\n  }),\n};\n"]}