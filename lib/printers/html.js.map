{"version":3,"file":"html.js","sourceRoot":"","sources":["../../src/printers/html.ts"],"names":[],"mappings":"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","sourcesContent":["import { Printer } from \"../printer\";\nimport { Node } from \"../parser\";\n\nexport default <{\n  [type: string]: Printer<Node, any, HTMLElement | Text | Comment>;\n}>{\n  text: (n: any) => document.createTextNode(n.content),\n  table: (n: any, s, output) => {\n    const table = document.createElement(\"table\");\n    const head = document.createElement(\"thead\");\n    output(n.head).forEach((c, i) => {\n      const th = document.createElement(\"th\");\n      th.align = n.align[i];\n      th.appendChild(c);\n      head.appendChild(th);\n    });\n    table.appendChild(head);\n    const body = document.createElement(\"tbody\");\n    (n.rows as any[]).map((r: any) => output(r, s)).forEach(r => {\n      const row = document.createElement(\"tr\");\n      r.forEach(c => row.appendChild(c));\n      body.appendChild(row);\n    });\n    table.appendChild(body);\n    return table;\n  },\n  paragraph: (n: any, s, output) => {\n    const p = document.createElement(\"p\");\n    output(n.children, s).forEach((c: any) => p.appendChild(c));\n    return p;\n  },\n  list: (n: any, s, output) => {\n    const l = document.createElement(/^\\d/.test(n.bullet) ? \"ol\" : \"ul\");\n    (n.items as any[]).forEach(item => {\n      const i = document.createElement(\"li\");\n      output(item, s).forEach((c: any) => i.appendChild(c));\n      l.appendChild(i);\n    });\n    return l;\n  },\n  link: (n: any, s, output) => {\n    const a = document.createElement(\"a\");\n    a.href = n.href;\n    output(n.children, s).forEach((c: any) => a.appendChild(c));\n    return a;\n  },\n  image: (n: any) => {\n    const i = document.createElement(\"img\");\n    i.alt = n.alt;\n    i.src = n.src;\n    i.title = n.title;\n    return i;\n  },\n  heading: (n: any, s, output) => {\n    const h = document.createElement(`h${n.level}`);\n    output(n.children, s).forEach((c: any) => h.appendChild(c));\n    return h;\n  },\n  emphasis: (n: any, s, output) => {\n    const delimiters: { [key: string]: string } = {\n      __: \"u\",\n      _: \"em\",\n      \"~~\": \"s\",\n      \"~\": \"em\",\n      \"**\": \"strong\",\n      \"*\": \"mark\",\n    };\n    const e = document.createElement(delimiters[n.delimiter]);\n    output(n.children, s).forEach((c: any) => e.appendChild(c));\n    return e;\n  },\n  comment: (n: any) => document.createComment(n.content),\n  codeBlock: (n: any) => {\n    const pr = document.createElement(\"pre\");\n    const c = document.createElement(\"code\");\n    c.appendChild(document.createTextNode(n.content));\n    pr.appendChild(c);\n    return pr;\n  },\n  blockQuote: (n: any, s, output) => {\n    const bq = document.createElement(\"blockquote\");\n    output(n.children, s).forEach((c: any) => bq.appendChild(c));\n    return bq;\n  },\n  inlineCode: (n: any) => {\n    const cd = document.createElement(\"code\");\n    cd.appendChild(document.createTextNode(n.content));\n    return cd;\n  },\n};\n"]}